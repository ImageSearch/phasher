<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
</head>
<body>
Comparison of hashes generated by fast method vs slow. 
<hr>
<pre>
<?php

require_once('test.php');


$file = $images['test'];
$file2 = $images['scaled_down'];
$file3 = $images['rotated_90'];

echo 'original image and hash (and hash string) - slow<br>';
echo '<img src="'.$file.'">';
$hash = $I->HashImage($file);
echo $I->HashAsTable($hash);
echo $I->HashAsString($hash);

echo '<hr>';
echo 'original image and hash (and hash string) - fast<br>';
echo '<img src="'.$file.'">';
$hash = $I->FastHashImage($file);
echo $I->HashAsTable($hash);
echo $I->HashAsString($hash);
echo '<hr>';
echo 'smaller image and hash (and hash string) - slow<br>';
echo '<img src="'.$file2.'">';
$hash = $I->HashImage($file2);
echo $I->HashAsTable($hash);
echo $I->HashAsString($hash);

echo '<hr>';
echo 'smaller image and hash (and hash string) - fast<br>';
echo '<img src="'.$file2.'">';
$hash = $I->FastHashImage($file2);
echo $I->HashAsTable($hash);
echo $I->HashAsString($hash);

echo '<hr>';
echo 'rotated image and hash (and hash string) - slow<br>';
echo '<img src="'.$file3.'">';
$hash = $I->HashImage($file3);
echo $I->HashAsTable($hash);
echo $I->HashAsString($hash);

echo '<hr>';
echo 'rotated image and hash (and hash string) - fast<br>';
echo '<img src="'.$file3.'">';
$hash = $I->FastHashImage($file3);
echo $I->HashAsTable($hash);
echo $I->HashAsString($hash);

$end = microtime(1);
	
$time = $end-$start;
$mem = memory_get_peak_usage(1);

echo "<hr>time: $time peak mem: $mem";



?>
</pre>
</body>
</html>